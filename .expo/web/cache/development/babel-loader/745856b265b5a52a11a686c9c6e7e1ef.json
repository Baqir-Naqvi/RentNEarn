{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Inputfield from \"../components/Inputfield\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Custombutton from \"../components/Custombutton\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../firebase/config\";\nimport { useModal } from \"../utils/Context\";\nimport { GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Loginscreen() {\n  var _useModal = useModal(),\n      setEmail = _useModal.setEmail,\n      setPassword = _useModal.setPassword,\n      email = _useModal.email,\n      password = _useModal.password;\n\n  var handleLogin = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var userCredential = yield signInWithEmailAndPassword(auth, email, password);\n        var user = userCredential.user;\n\n        if (user) {\n          navigation.navigate('Home');\n        }\n      } catch (error) {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        alert(errorMessage);\n      }\n    });\n\n    return function handleLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleGoogleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var provider = new GoogleAuthProvider();\n\n      try {\n        var result = yield signInWithPopup(auth, provider);\n        var user = result.user;\n\n        if (user) {\n          navigation.navigate('Home');\n        }\n      } catch (error) {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        alert(errorMessage);\n      }\n    });\n\n    return function handleGoogleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var navigation = useNavigation();\n  return _jsxs(_StyledComponent, {\n    className: \"bg-[#f9fdfd] items-center justify-center flex-none\",\n    component: SafeAreaView,\n    children: [_jsx(_StyledComponent, {\n      className: \"flex-1 h-50 items-center justify-center\",\n      style: styles.imagesection,\n      component: View,\n      children: _jsx(Image, {\n        source: require(\"../assets/img1.png\")\n      })\n    }), _jsxs(_StyledComponent, {\n      className: \"flex-2 items-center justify-center\",\n      style: styles.inputsection,\n      component: View,\n      children: [_jsx(_StyledComponent, {\n        className: \"m-4\",\n        component: View,\n        children: _jsx(Text, {\n          style: styles.ScreenText,\n          children: \"Login\"\n        })\n      }), _jsx(Inputfield, {\n        placeholder: \"Email\",\n        iconname: \"email\",\n        keyboardType: \"email-address\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        }\n      }), _jsx(Inputfield, {\n        placeholder: \"Password\",\n        iconname: \"lock\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return setPassword(password);\n        },\n        value: password\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('Home');\n        },\n        style: styles.forgetpassword,\n        children: _jsx(_StyledComponent, {\n          className: \"text-red-500\",\n          component: Text,\n          children: \"Forget Password?\"\n        })\n      }), _jsxs(_StyledComponent, {\n        className: \"text-center justify-center mt-4\",\n        component: View,\n        children: [_jsx(TouchableOpacity, {\n          onPress: handleLogin,\n          children: _jsx(Custombutton, {\n            title: \"Login\",\n            custombackgroundColor: \"#24c2ce\"\n          })\n        }), _jsx(View, {\n          children: _jsx(_StyledComponent, {\n            className: \"text-center\",\n            component: Text,\n            children: \"OR\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: handleGoogleLogin,\n          children: _jsx(Custombutton, {\n            title: \"Login with Google\",\n            iconname: \"google\",\n            custombackgroundColor: \"#FF6600\",\n            iconcolor: \"#24c2ce\"\n          })\n        }), _jsxs(_StyledComponent, {\n          className: \"flex-row justify-center mt-4\",\n          component: View,\n          children: [_jsx(_StyledComponent, {\n            className: \"text-gray-500\",\n            component: Text,\n            children: \"Don't have an account?\"\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.navigate('SignUp');\n            },\n            children: _jsx(_StyledComponent, {\n              className: \"text-blue-500 font-bold\",\n              component: Text,\n              children: \"Sign Up\"\n            })\n          })]\n        })]\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  imagesection: {\n    height: '35%',\n    width: '100%'\n  },\n  inputsection: {\n    height: '70%',\n    width: '100%',\n    position: 'relative',\n    backgroundColor: '#f9fdfd'\n  },\n  forgetpassword: {\n    top: 10,\n    fontSize: 15,\n    fontWeight: 'bold',\n    backgroundColor: 'white',\n    justifyContent: 'flex-end',\n    alignItems: 'flex-end',\n    width: '100%',\n    paddingRight: 20\n  },\n  ScreenText: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: '#24c2ce'\n  }\n});\n\n_NativeWindStyleSheet.create({\n  styles: {\n    \"relative\": {\n      \"position\": \"relative\"\n    },\n    \"m-4\": {\n      \"marginTop\": 16,\n      \"marginRight\": 16,\n      \"marginBottom\": 16,\n      \"marginLeft\": 16\n    },\n    \"mt-4\": {\n      \"marginTop\": 16\n    },\n    \"flex-none\": {\n      \"flexGrow\": 0,\n      \"flexShrink\": 0\n    },\n    \"flex-1\": {\n      \"flexGrow\": 1,\n      \"flexShrink\": 1\n    },\n    \"flex-row\": {\n      \"flexDirection\": \"row\"\n    },\n    \"items-center\": {\n      \"alignItems\": \"center\"\n    },\n    \"justify-center\": {\n      \"justifyContent\": \"center\"\n    },\n    \"bg-[#f9fdfd]\": {\n      \"backgroundColor\": \"#f9fdfd\"\n    },\n    \"text-center\": {\n      \"textAlign\": \"center\"\n    },\n    \"font-bold\": {\n      \"fontWeight\": \"700\"\n    },\n    \"text-red-500\": {\n      \"color\": \"#ef4444\"\n    },\n    \"text-gray-500\": {\n      \"color\": \"#6b7280\"\n    },\n    \"text-blue-500\": {\n      \"color\": \"#3b82f6\"\n    }\n  }\n});","map":{"version":3,"names":["React","useNavigation","Inputfield","Custombutton","signInWithEmailAndPassword","auth","useModal","GoogleAuthProvider","signInWithPopup","Loginscreen","setEmail","setPassword","email","password","handleLogin","userCredential","user","navigation","navigate","error","errorCode","code","errorMessage","message","alert","handleGoogleLogin","provider","result","styles","imagesection","require","inputsection","ScreenText","text","forgetpassword","StyleSheet","create","height","width","position","backgroundColor","top","fontSize","fontWeight","justifyContent","alignItems","paddingRight","color"],"sources":["D:/MobielApp/SemesterProject/Mobile_App/screens/Loginscreen.jsx"],"sourcesContent":["import { View, Text, Image, StyleSheet,TextInput } from 'react-native'\r\nimport React from 'react'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport { SafeAreaView } from 'react-native'\r\nimport Inputfield from '../components/Inputfield'\r\nimport { TouchableOpacity } from 'react-native'\r\nimport Custombutton from '../components/Custombutton'\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport {auth} from '../firebase/config'\r\nimport { useModal} from '../utils/Context'\r\nimport {GoogleAuthProvider,signInWithPopup} from 'firebase/auth'\r\n\r\n\r\n\r\nexport default function Loginscreen() {\r\n  const {setEmail,setPassword,email,password} = useModal()\r\n   const  handleLogin = async() => {\r\n      //navigate to home screen if login is successful\r\n     \r\n      try {\r\n        const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n        const user = userCredential.user;\r\n        if(user){\r\n          navigation.navigate('Home')\r\n        }\r\n      } catch (error) {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        alert(errorMessage)\r\n      } \r\n  }\r\n\r\n   const handleGoogleLogin = async() => {\r\n    const provider = new GoogleAuthProvider();\r\n    //take user to new window to login with google\r\n    try {\r\n      const result = await signInWithPopup(auth, provider);\r\n      const user = result.user;\r\n      if(user){\r\n        navigation.navigate('Home')\r\n      }\r\n    } catch (error) {\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      alert(errorMessage)\r\n    }\r\n  }\r\n\r\n\r\n  const navigation = useNavigation()\r\n  return (\r\n    <SafeAreaView className=\"bg-[#f9fdfd] items-center justify-center flex-none\">\r\n      {/* Upper section for image */}\r\n      <View className='flex-1 h-50 items-center justify-center' style={styles.imagesection}>\r\n        <Image source={require('../assets/img1.png')}/>\r\n      </View>\r\n      {/* Lower section for input fields */}\r\n      <View className=\"flex-2 items-center justify-center\" style={styles.inputsection}>\r\n        <View className='m-4'>\r\n          <Text style={styles.ScreenText}>Login</Text>\r\n        </View>\r\n        <Inputfield \r\n        placeholder=\"Email\" \r\n        iconname=\"email\" \r\n        keyboardType=\"email-address\"\r\n        value={email}\r\n        onChangeText={(text) => setEmail(text)}\r\n        />\r\n        <Inputfield\r\n          placeholder=\"Password\"\r\n          iconname=\"lock\"\r\n          secureTextEntry={true}\r\n          onChangeText={(password) => setPassword(password)}\r\n          value={password}\r\n        />\r\n        {/* Forget password */}\r\n        <TouchableOpacity\r\n          onPress={() => navigation.navigate('Home')}\r\n          style={styles.forgetpassword}\r\n        >\r\n          <Text className=\"text-red-500\">Forget Password?</Text>\r\n        </TouchableOpacity>\r\n        <View className=\"text-center justify-center mt-4\">\r\n          {/* Login button */}\r\n          <TouchableOpacity\r\n            onPress={handleLogin}\r\n          >\r\n          <Custombutton\r\n            title=\"Login\"\r\n            custombackgroundColor=\"#24c2ce\"\r\n          />\r\n          </TouchableOpacity>\r\n          <View>\r\n            <Text className=\"text-center\">OR</Text>\r\n          </View>\r\n           <TouchableOpacity\r\n            onPress={handleGoogleLogin}\r\n          >\r\n          <Custombutton\r\n            title=\"Login with Google\"\r\n            iconname=\"google\"\r\n            custombackgroundColor='#FF6600' \r\n            iconcolor='#24c2ce'\r\n          />\r\n          </TouchableOpacity>\r\n          <View className=\"flex-row justify-center mt-4\">\r\n            <Text className=\"text-gray-500\">Don't have an account?</Text>\r\n            <TouchableOpacity\r\n              onPress={() => navigation.navigate('SignUp')}>\r\n              <Text className=\"text-blue-500 font-bold\">Sign Up</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\nconst styles = StyleSheet.create({\r\n  imagesection: {\r\n    height: '35%',\r\n    width: '100%',\r\n  },\r\n  inputsection: {\r\n    height: '70%',\r\n    width: '100%',\r\n    position: 'relative',\r\n    backgroundColor: '#f9fdfd'\r\n  },\r\n  forgetpassword: {\r\n    top: 10,\r\n    fontSize: 15,\r\n    fontWeight: 'bold',\r\n    backgroundColor: 'white',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'flex-end',\r\n    width: '100%',\r\n    paddingRight: 20,\r\n  },\r\n  ScreenText: {\r\n    fontSize: 30,\r\n    fontWeight: 'bold',\r\n    color: '#24c2ce',\r\n  }\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}