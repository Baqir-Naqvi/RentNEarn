{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Inputfield from \"../components/Inputfield\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Custombutton from \"../components/Custombutton\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../firebase/config\";\nimport { useModal } from \"../utils/Context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SignUpScreen() {\n  var _useModal = useModal(),\n      setEmail = _useModal.setEmail,\n      setPassword = _useModal.setPassword,\n      email = _useModal.email,\n      password = _useModal.password;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      confirmPassword = _useState2[0],\n      setConfirmPassword = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      username = _useState4[0],\n      setUsername = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      CNIC = _useState6[0],\n      setCNIC = _useState6[1];\n\n  useEffect(function () {\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n    setUsername('');\n    setCNIC('');\n  }, []);\n\n  var handleSignup = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (password !== confirmPassword) {\n        alert('Passwords do not match');\n        return;\n      }\n\n      var CNICregex = /^[0-9]{5}-[0-9]{7}-[0-9]{1}$/;\n\n      if (!CNICregex.test(CNIC)) {\n        alert('Invalid CNIC');\n        return;\n      }\n\n      try {\n        var userCredential = yield createUserWithEmailAndPassword(auth, email, password);\n        var user = userCredential.user;\n\n        if (user) {\n          navigation.navigate('Home');\n        }\n      } catch (error) {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        alert(errorMessage);\n      }\n    });\n\n    return function handleSignup() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var navigation = useNavigation();\n  return _jsx(_StyledComponent, {\n    className: \"flex-1 bg-[#24c2ce] items-center justify-center\",\n    component: SafeAreaView,\n    children: _jsx(View, {\n      children: _jsxs(_StyledComponent, {\n        className: \"mt-5  flex-1 items-center justify-center\",\n        style: styles.inputsection,\n        component: View,\n        children: [_jsx(_StyledComponent, {\n          className: \"m-4\",\n          component: View,\n          children: _jsx(Text, {\n            style: styles.ScreenText,\n            children: \"Sign Up\"\n          })\n        }), _jsx(Inputfield, {\n          placeholder: \"Username\",\n          iconname: \"user\",\n          value: username,\n          onChangeText: function onChangeText(text) {\n            return setUsername(text);\n          }\n        }), _jsx(Inputfield, {\n          placeholder: \"Email\",\n          iconname: \"email\",\n          keyboardType: \"email-address\",\n          value: email,\n          onChangeText: function onChangeText(text) {\n            return setEmail(text);\n          }\n        }), _jsx(Inputfield, {\n          placeholder: \"Password\",\n          iconname: \"lock\",\n          secureTextEntry: true,\n          onChangeText: function onChangeText(password) {\n            return setPassword(password);\n          },\n          value: password\n        }), _jsx(Inputfield, {\n          placeholder: \"Confirm Password\",\n          iconname: \"lock\",\n          secureTextEntry: true,\n          onChangeText: function onChangeText(password) {\n            return setConfirmPassword(password);\n          },\n          value: confirmPassword\n        }), _jsx(Inputfield, {\n          placeholder: \"CNIC\",\n          iconname: \"v-card\",\n          keyboardType: \"numeric\",\n          onChangeText: function onChangeText(cnic) {\n            return setCNIC(cnic);\n          },\n          value: CNIC\n        }), _jsxs(_StyledComponent, {\n          className: \"text-center justify-center mt-4\",\n          component: View,\n          children: [_jsx(TouchableOpacity, {\n            onPress: handleSignup,\n            children: _jsx(Custombutton, {\n              title: \"Create Account\"\n            })\n          }), _jsx(View, {\n            children: _jsx(_StyledComponent, {\n              className: \"text-center mt-4\",\n              component: Text,\n              children: \"OR\"\n            })\n          }), _jsxs(_StyledComponent, {\n            className: \"flex-row justify-center mt-4\",\n            component: View,\n            children: [_jsx(_StyledComponent, {\n              className: \"text-gray-500\",\n              component: Text,\n              children: \"Already have an account?\"\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return navigation.navigate('Login');\n              },\n              children: _jsx(_StyledComponent, {\n                className: \"text-blue-500 font-bold\",\n                component: Text,\n                children: \"Login\"\n              })\n            })]\n          })]\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  inputsection: {\n    height: '100%',\n    width: '100%',\n    position: 'relative',\n    backgroundColor: '#f9fdfd',\n    borderRadius: 20,\n    marginVertical: 40,\n    paddingHorizontal: 20,\n    paddingVertical: 0,\n    paddingTop: 0\n  },\n  ScreenText: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: '#24c2ce',\n    marginVertical: 20\n  }\n});\n\n_NativeWindStyleSheet.create({\n  styles: {\n    \"relative\": {\n      \"position\": \"relative\"\n    },\n    \"m-4\": {\n      \"marginTop\": 16,\n      \"marginRight\": 16,\n      \"marginBottom\": 16,\n      \"marginLeft\": 16\n    },\n    \"mt-5\": {\n      \"marginTop\": 20\n    },\n    \"mt-4\": {\n      \"marginTop\": 16\n    },\n    \"flex-1\": {\n      \"flexGrow\": 1,\n      \"flexShrink\": 1\n    },\n    \"flex-row\": {\n      \"flexDirection\": \"row\"\n    },\n    \"items-center\": {\n      \"alignItems\": \"center\"\n    },\n    \"justify-center\": {\n      \"justifyContent\": \"center\"\n    },\n    \"bg-[#24c2ce]\": {\n      \"backgroundColor\": \"#24c2ce\"\n    },\n    \"text-center\": {\n      \"textAlign\": \"center\"\n    },\n    \"font-bold\": {\n      \"fontWeight\": \"700\"\n    },\n    \"text-gray-500\": {\n      \"color\": \"#6b7280\"\n    },\n    \"text-blue-500\": {\n      \"color\": \"#3b82f6\"\n    }\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","useNavigation","Inputfield","Custombutton","createUserWithEmailAndPassword","auth","useModal","SignUpScreen","setEmail","setPassword","email","password","confirmPassword","setConfirmPassword","username","setUsername","CNIC","setCNIC","handleSignup","alert","CNICregex","test","userCredential","user","navigation","navigate","error","errorCode","code","errorMessage","message","styles","inputsection","ScreenText","text","cnic","StyleSheet","create","height","width","position","backgroundColor","borderRadius","marginVertical","paddingHorizontal","paddingVertical","paddingTop","fontSize","fontWeight","color"],"sources":["D:/MobielApp/SemesterProject/Mobile_App/screens/SignUpScreen.jsx"],"sourcesContent":["import { View, Text,StyleSheet } from 'react-native'\r\nimport React,{useState,useEffect} from 'react'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport { SafeAreaView } from 'react-native'\r\nimport Inputfield from '../components/Inputfield'\r\nimport { TouchableOpacity } from 'react-native'\r\nimport Custombutton from '../components/Custombutton'\r\nimport {createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport {auth} from '../firebase/config'\r\nimport { useModal} from '../utils/Context'\r\n \r\n\r\nexport default function SignUpScreen() {\r\n  const {setEmail,setPassword,email,password} = useModal()\r\n  const [confirmPassword,setConfirmPassword] = useState('')\r\n  const [username,setUsername] = useState('')\r\n  const [CNIC,setCNIC] = useState('')\r\n  useEffect(() => {\r\n    setEmail('')\r\n    setPassword('')\r\n    setConfirmPassword('')\r\n    setUsername('')\r\n    setCNIC('')\r\n  }, [])\r\n\r\n  \r\n  const handleSignup = async() => {\r\n\r\n    if(password !== confirmPassword){\r\n      alert('Passwords do not match')\r\n      return\r\n    }\r\n    //Define CNIC regex\r\n    const CNICregex = /^[0-9]{5}-[0-9]{7}-[0-9]{1}$/\r\n    if(!CNICregex.test(CNIC)){\r\n      alert('Invalid CNIC')\r\n      return\r\n    }\r\n    //navigate to home screen if login is successful\r\n    try {\r\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n      const user = userCredential.user;\r\n      if(user){\r\n        navigation.navigate('Home')\r\n      }\r\n    } catch (error) {\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      alert(errorMessage)\r\n    }\r\n  }\r\n\r\n\r\n  const navigation = useNavigation()\r\n  return (\r\n    <SafeAreaView className=\"flex-1 bg-[#24c2ce] items-center justify-center\">\r\n      <View>\r\n      <View className=\"mt-5  flex-1 items-center justify-center\" style={styles.inputsection}>\r\n        <View className='m-4'>\r\n          <Text style={styles.ScreenText}>Sign Up</Text>\r\n        </View>\r\n         <Inputfield \r\n        placeholder=\"Username\" \r\n        iconname=\"user\" \r\n        value={username}\r\n        onChangeText={(text) => setUsername(text)}\r\n        />\r\n        <Inputfield \r\n        placeholder=\"Email\" \r\n        iconname=\"email\" \r\n        keyboardType=\"email-address\"\r\n        value={email}\r\n        onChangeText={(text) => setEmail(text)}\r\n        />\r\n        <Inputfield\r\n          placeholder=\"Password\"\r\n          iconname=\"lock\"\r\n          secureTextEntry={true}\r\n          onChangeText={(password) => setPassword(password)}\r\n          value={password}\r\n        />\r\n        <Inputfield\r\n          placeholder=\"Confirm Password\"\r\n          iconname=\"lock\"\r\n          secureTextEntry={true}\r\n          onChangeText={(password) => setConfirmPassword(password)}\r\n          value={confirmPassword}\r\n        />\r\n        <Inputfield\r\n          placeholder=\"CNIC\"\r\n          iconname=\"v-card\"\r\n          keyboardType=\"numeric\"\r\n          onChangeText={(cnic) => setCNIC(cnic)}\r\n          value={CNIC}\r\n        />\r\n\r\n       \r\n        <View className=\"text-center justify-center mt-4\">\r\n          {/* Login button */}\r\n          <TouchableOpacity\r\n            onPress={handleSignup}\r\n          >\r\n          <Custombutton\r\n            title=\"Create Account\"\r\n          />\r\n          </TouchableOpacity>\r\n          <View>\r\n            <Text className=\"text-center mt-4\">OR</Text>\r\n          </View>\r\n          <View className=\"flex-row justify-center mt-4\">\r\n            <Text className=\"text-gray-500\"> \r\n              Already have an account?\r\n            </Text>\r\n            <TouchableOpacity\r\n            onPress={() => navigation.navigate('Login')}\r\n            >\r\n              <Text className=\"text-blue-500 font-bold\">Login</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\nconst styles = StyleSheet.create({\r\n\r\n  inputsection: {\r\n    height: '100%',\r\n    width: '100%',\r\n    position: 'relative',\r\n    backgroundColor: '#f9fdfd',\r\n    borderRadius: 20,\r\n    marginVertical: 40,\r\n    paddingHorizontal: 20,\r\n    paddingVertical:0,\r\n    paddingTop:0,\r\n\r\n    \r\n  },\r\n\r\n  ScreenText: {\r\n    fontSize: 30,\r\n    fontWeight: 'bold',\r\n    color: '#24c2ce',\r\n    marginVertical: 20,\r\n  }\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}