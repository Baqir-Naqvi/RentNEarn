{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport React, { useEffect } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Inputfield from \"../components/Inputfield\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Custombutton from \"../components/Custombutton\";\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from \"../firebase/config\";\nimport { useModal } from \"../utils/Context\";\nimport { GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { doc, getDoc, onSnapshot } from 'firebase/firestore';\nimport { db } from \"../firebase/config\";\nimport { getDatabase, ref, onValue } from \"firebase/database\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Loginscreen() {\n  useEffect(function () {\n    var database = getDatabase();\n    var starCountRef = ref(database, 'Status/1');\n    onValue(starCountRef, function (snapshot) {\n      var data = snapshot.val();\n      console.log(data);\n    });\n  }, []);\n\n  var _useModal = useModal(),\n      setEmail = _useModal.setEmail,\n      setPassword = _useModal.setPassword,\n      email = _useModal.email,\n      password = _useModal.password,\n      setUserData = _useModal.setUserData;\n\n  var handleLogin = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var userCredential = yield signInWithEmailAndPassword(auth, email, password);\n        var user = userCredential.user;\n        yield getDoc(doc(db, 'users', user.uid)).then(function (doc) {\n          if (doc.exists()) {\n            setUserData(doc.data());\n            navigation.navigate('Home');\n          } else {\n            alert('No such document!');\n          }\n        }).catch(function (error) {\n          alert('Error getting document:', error);\n        });\n      } catch (error) {\n        var errorMessage = error.message;\n        alert(errorMessage);\n      }\n    });\n\n    return function handleLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleGoogleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var provider = new GoogleAuthProvider();\n\n      try {\n        var result = yield signInWithPopup(auth, provider);\n        var user = result.user;\n\n        if (user) {\n          navigation.navigate('Home');\n        }\n      } catch (error) {\n        var errorMessage = error.message;\n        alert(errorMessage);\n      }\n    });\n\n    return function handleGoogleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var navigation = useNavigation();\n  return _jsxs(_StyledComponent, {\n    className: \"bg-[#f9fdfd] items-center justify-center flex-none\",\n    component: SafeAreaView,\n    children: [_jsx(_StyledComponent, {\n      className: \"flex-1 h-50 items-center justify-center\",\n      style: styles.imagesection,\n      component: View,\n      children: _jsx(Image, {\n        source: require(\"../assets/img1.png\")\n      })\n    }), _jsxs(_StyledComponent, {\n      className: \"flex-2 items-center justify-center\",\n      style: styles.inputsection,\n      component: View,\n      children: [_jsx(_StyledComponent, {\n        className: \"m-4\",\n        component: View,\n        children: _jsx(Text, {\n          style: styles.ScreenText,\n          children: \"Login\"\n        })\n      }), _jsx(Inputfield, {\n        placeholder: \"Email\",\n        iconname: \"envelope-o\",\n        keyboardType: \"email-address\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        }\n      }), _jsx(Inputfield, {\n        placeholder: \"Password\",\n        iconname: \"lock\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return setPassword(password);\n        },\n        value: password\n      }), _jsxs(_StyledComponent, {\n        className: \"text-center justify-center flex-1\",\n        component: View,\n        children: [_jsx(TouchableOpacity, {\n          onPress: handleLogin,\n          children: _jsx(Custombutton, {\n            title: \"Login\",\n            custombackgroundColor: \"#24c2ce\"\n          })\n        }), _jsx(View, {\n          children: _jsx(_StyledComponent, {\n            className: \"text-center\",\n            component: Text,\n            children: \"OR\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: handleGoogleLogin,\n          children: _jsx(Custombutton, {\n            title: \"Login with Google\",\n            iconname: \"google\",\n            custombackgroundColor: \"#FF6600\",\n            iconcolor: \"#24c2ce\"\n          })\n        }), _jsxs(_StyledComponent, {\n          className: \"flex-row justify-center mt-4\",\n          component: View,\n          children: [_jsx(_StyledComponent, {\n            className: \"text-gray-500\",\n            component: Text,\n            children: \"Don't have an account?\"\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.navigate('SignUp');\n            },\n            children: _jsx(_StyledComponent, {\n              className: \"text-cyan-400 font-bold\",\n              component: Text,\n              children: \"Sign Up\"\n            })\n          })]\n        })]\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  imagesection: {\n    height: '35%',\n    width: '100%'\n  },\n  inputsection: {\n    height: '70%',\n    width: '100%',\n    position: 'relative',\n    backgroundColor: '#f9fdfd'\n  },\n  forgetpassword: {\n    top: 10,\n    fontSize: 15,\n    fontWeight: 'bold',\n    backgroundColor: 'white',\n    justifyContent: 'flex-end',\n    alignItems: 'flex-end',\n    width: '100%',\n    paddingRight: 20\n  },\n  ScreenText: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: '#24c2ce'\n  }\n});\n\n_NativeWindStyleSheet.create({\n  styles: {\n    \"relative\": {\n      \"position\": \"relative\"\n    },\n    \"m-4\": {\n      \"marginTop\": 16,\n      \"marginRight\": 16,\n      \"marginBottom\": 16,\n      \"marginLeft\": 16\n    },\n    \"mt-4\": {\n      \"marginTop\": 16\n    },\n    \"flex-none\": {\n      \"flexGrow\": 0,\n      \"flexShrink\": 0\n    },\n    \"flex-1\": {\n      \"flexGrow\": 1,\n      \"flexShrink\": 1\n    },\n    \"flex-row\": {\n      \"flexDirection\": \"row\"\n    },\n    \"items-center\": {\n      \"alignItems\": \"center\"\n    },\n    \"justify-center\": {\n      \"justifyContent\": \"center\"\n    },\n    \"bg-[#f9fdfd]\": {\n      \"backgroundColor\": \"#f9fdfd\"\n    },\n    \"text-center\": {\n      \"textAlign\": \"center\"\n    },\n    \"font-bold\": {\n      \"fontWeight\": \"700\"\n    },\n    \"text-gray-500\": {\n      \"color\": \"#6b7280\"\n    },\n    \"text-cyan-400\": {\n      \"color\": \"#22d3ee\"\n    }\n  }\n});","map":{"version":3,"names":["React","useEffect","useNavigation","Inputfield","Custombutton","signInWithEmailAndPassword","auth","useModal","GoogleAuthProvider","signInWithPopup","doc","getDoc","onSnapshot","db","getDatabase","ref","onValue","Loginscreen","database","starCountRef","snapshot","data","val","console","log","setEmail","setPassword","email","password","setUserData","handleLogin","userCredential","user","uid","then","exists","navigation","navigate","alert","catch","error","errorMessage","message","handleGoogleLogin","provider","result","styles","imagesection","require","inputsection","ScreenText","text","StyleSheet","create","height","width","position","backgroundColor","forgetpassword","top","fontSize","fontWeight","justifyContent","alignItems","paddingRight","color"],"sources":["D:/MobielApp/SemesterProject/Mobile_App/screens/Loginscreen.jsx"],"sourcesContent":["import { View, Text, Image, StyleSheet, TextInput } from 'react-native'\r\nimport React,{useEffect} from 'react'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport { SafeAreaView } from 'react-native'\r\nimport Inputfield from '../components/Inputfield'\r\nimport { TouchableOpacity } from 'react-native'\r\nimport Custombutton from '../components/Custombutton'\r\nimport { signInWithEmailAndPassword } from 'firebase/auth'\r\nimport { auth } from '../firebase/config'\r\nimport { useModal } from '../utils/Context'\r\nimport { GoogleAuthProvider, signInWithPopup } from 'firebase/auth'\r\nimport { doc, getDoc,onSnapshot } from 'firebase/firestore'\r\nimport { db } from '../firebase/config'\r\nimport { getDatabase, ref, onValue} from \"firebase/database\"\r\n\r\n\r\n\r\nexport default function Loginscreen() {\r\n  useEffect(()=>{\r\n    const database = getDatabase();\r\n    const starCountRef = ref(database, 'Status/1');  \r\n    onValue(starCountRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      console.log(data);\r\n    });\r\n\r\n  \r\n\r\n  },[])\r\n  const { setEmail, setPassword, email, password, setUserData } = useModal()\r\n  const handleLogin = async () => {\r\n    //navigate to home screen if login is successful\r\n\r\n    try {\r\n      const userCredential = await signInWithEmailAndPassword(\r\n        auth,\r\n        email,\r\n        password,\r\n      )\r\n      const user = userCredential.user\r\n      await getDoc(doc(db, 'users', user.uid))\r\n        .then((doc) => {\r\n          if (doc.exists()) {\r\n            setUserData(doc.data())\r\n            navigation.navigate('Home')\r\n          } else {\r\n            alert('No such document!')\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          alert('Error getting document:', error)\r\n        })\r\n    } catch (error) {\r\n      const errorMessage = error.message\r\n      alert(errorMessage)\r\n    }\r\n  }\r\n\r\n  const handleGoogleLogin = async () => {\r\n    const provider = new GoogleAuthProvider()\r\n    //take user to new window to login with google\r\n    try {\r\n      const result = await signInWithPopup(auth, provider)\r\n      const user = result.user\r\n      if (user) {\r\n        navigation.navigate('Home')\r\n      }\r\n    } catch (error) {\r\n      const errorMessage = error.message\r\n      alert(errorMessage)\r\n    }\r\n  }\r\n\r\n  const navigation = useNavigation()\r\n  return (\r\n    <SafeAreaView className=\"bg-[#f9fdfd] items-center justify-center flex-none\">\r\n      {/* Upper section for image */}\r\n      <View\r\n        className=\"flex-1 h-50 items-center justify-center\"\r\n        style={styles.imagesection}\r\n      >\r\n        <Image source={require('../assets/img1.png')} />\r\n      </View>\r\n      {/* Lower section for input fields */}\r\n      <View\r\n        className=\"flex-2 items-center justify-center\"\r\n        style={styles.inputsection}\r\n      >\r\n        <View className=\"m-4\">\r\n          <Text style={styles.ScreenText}>Login</Text>\r\n        </View>\r\n        <Inputfield\r\n          placeholder=\"Email\"\r\n          iconname=\"envelope-o\"\r\n          keyboardType=\"email-address\"\r\n          value={email}\r\n          onChangeText={(text) => setEmail(text)}\r\n        />\r\n        <Inputfield\r\n          placeholder=\"Password\"\r\n          iconname=\"lock\"\r\n          secureTextEntry={true}\r\n          onChangeText={(password) => setPassword(password)}\r\n          value={password}\r\n        />\r\n        <View className=\"text-center justify-center flex-1\">\r\n          {/* Login button */}\r\n          <TouchableOpacity onPress={handleLogin}>\r\n            <Custombutton title=\"Login\" custombackgroundColor=\"#24c2ce\" />\r\n          </TouchableOpacity>\r\n          <View>\r\n            <Text className=\"text-center\">OR</Text>\r\n          </View>\r\n          <TouchableOpacity onPress={handleGoogleLogin}>\r\n            <Custombutton\r\n              title=\"Login with Google\"\r\n              iconname=\"google\"\r\n              custombackgroundColor=\"#FF6600\"\r\n              iconcolor=\"#24c2ce\"\r\n            />\r\n          </TouchableOpacity>\r\n          <View className=\"flex-row justify-center mt-4\">\r\n            <Text className=\"text-gray-500\">Don't have an account?</Text>\r\n            <TouchableOpacity onPress={() => navigation.navigate('SignUp')}>\r\n              <Text className=\"text-cyan-400 font-bold\">Sign Up</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\nconst styles = StyleSheet.create({\r\n  imagesection: {\r\n    height: '35%',\r\n    width: '100%',\r\n  },\r\n  inputsection: {\r\n    height: '70%',\r\n    width: '100%',\r\n    position: 'relative',\r\n    backgroundColor: '#f9fdfd',\r\n  },\r\n  forgetpassword: {\r\n    top: 10,\r\n    fontSize: 15,\r\n    fontWeight: 'bold',\r\n    backgroundColor: 'white',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'flex-end',\r\n    width: '100%',\r\n    paddingRight: 20,\r\n  },\r\n  ScreenText: {\r\n    fontSize: 30,\r\n    fontWeight: 'bold',\r\n    color: '#24c2ce',\r\n  },\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}